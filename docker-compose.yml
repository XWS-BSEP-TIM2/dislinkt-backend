version: "3.8"

services:
  auth_service:
    image: auth_service
    container_name: auth_service
    build:
      context: .
      dockerfile: ./auth_service/Dockerfile
    restart: on-failure
    environment:
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      MONGO_DB_HOST: ${AUTH_MONGO_DB_HOST_DOCKER}
      MONGO_DB_PORT: ${MONGO_DB_PORT}      
      PROFILE_SERVICE_HOST: ${PROFILE_SERVICE_HOST_DOCKER}
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
    depends_on:
      - auth_mongo_db
    networks:
      - network

  connection_service:
    image: connection_service
    container_name: connection_service
    build:
      context: .
      dockerfile: ./connection_service/Dockerfile
    restart: on-failure
    environment:
      CONNECTION_SERVICE_HOST: ${CONNECTION_SERVICE_HOST_DOCKER}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
      NEO4J_URI: ${NEO4J_URI}
      NEO4J_HOST: ${NEO4J_HOST_DOCKER}
      NEO4J_PORT: ${NEO4J_PORT}
      NEO4J_USERNAME: ${NEO4J_USERNAME}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
    depends_on:
      - neo4j
    networks:
      - network

  post_service:
    image: post_service
    container_name: post_service
    build:
      context: .
      dockerfile: ./post_service/Dockerfile
    restart: on-failure
    environment:
      POST_SERVICE_PORT: ${POST_SERVICE_PORT}
      MONGO_DB_HOST: ${POST_MONGO_DB_HOST_DOCKER}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
      AUTH_SERVICE_HOST: ${AUTH_SERVICE_HOST_DOCKER}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      PROFILE_SERVICE_HOST: ${PROFILE_SERVICE_HOST_DOCKER}
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
      CONNECTION_SERVICE_HOST: ${CONNECTION_SERVICE_HOST_DOCKER}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
    depends_on:
      - post_mongo_db
    networks:
      - network

  profile_service:
    image: profile_service
    container_name: profile_service
    build:
      context: .
      dockerfile: ./profile_service/Dockerfile
    restart: on-failure
    environment:
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
      MONGO_DB_HOST: ${PROFILE_MONGO_DB_HOST_DOCKER}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
    depends_on:
      - profile_mongo_db
    networks:
      - network

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      POST_SERVICE_HOST: ${POST_SERVICE_HOST_DOCKER}
      POST_SERVICE_PORT: ${POST_SERVICE_PORT}
      AUTH_SERVICE_HOST: ${AUTH_SERVICE_HOST_DOCKER}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      PROFILE_SERVICE_HOST: ${PROFILE_SERVICE_HOST_DOCKER}
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
      CONNECTION_SERVICE_HOST: ${CONNECTION_SERVICE_HOST_DOCKER}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
    networks:
      - network

  auth_mongo_db:
    image: mongo
    container_name: auth_mongo_db
    restart: on-failure
    networks:
      - network
    logging:
      driver: none

  profile_mongo_db:
    image: mongo
    container_name: profile_mongo_db
    restart: on-failure
    networks:
      - network
    logging:
      driver: none

  post_mongo_db:
    image: mongo
    container_name: post_mongo_db
    restart: on-failure
    networks:
      - network
    logging:
      driver: none

  neo4j:
    image: neo4j:4.3.3-community
    container_name: neo4j
    ports:
      - ${NEO4J_PORT}:${NEO4J_PORT}
      - ${NEO4J_PORT_2}:${NEO4J_PORT_2}
    environment:
      - NEO4J_AUTH=neo4j/connection
      - NEO4J_dbms_memory_pagecache_size=512MB
    networks:
      - network

networks:
  network:
    driver: bridge