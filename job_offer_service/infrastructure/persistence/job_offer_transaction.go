package persistence

import (
	"github.com/neo4j/neo4j-go-driver/v4/neo4j"
)

func clearGraphDB(transaction neo4j.Transaction) error {
	_, err := transaction.Run(
		"MATCH (n) DETACH DELETE n",
		map[string]interface{}{})
	return err
}

func initGraphDB(transaction neo4j.Transaction) error {
	_, err := transaction.Run(
		"CREATE (S1:SKILL{name: \"C\"}), (S2:SKILL{name: \"C++\"}), (S3:SKILL{name: \"C#\"}), (S4:SKILL{name: \"GO\"}), (S5:SKILL{name: \"Java\"}), (S6:SKILL{name: \"JavaScript\"}), (S7:SKILL{name: \"TypeScript\"}), (S8:SKILL{name: \"PhP\"}), (S9:SKILL{name: \"Perl\"}), (S10:SKILL{name: \"Ruby\"}), (S11:SKILL{name: \"Python\"}), (S12:SKILL{name: \"Rust\"}), (S13:SKILL{name: \"Haskell\"}),  (S14:SKILL{name: \"Vue.js\"}), (S15:SKILL{name: \"React\"}), (S16:SKILL{name: \"Angular\"}), (S17:SKILL{name: \"Bootstrap\"}), (S18:SKILL{name: \"Bulma\"}), (S19:SKILL{name: \"Sass\"}), (S20:SKILL{name: \"HTML\"}), (S21:SKILL{name: \"CSS\"}), (S22:SKILL{name: \"Materialize\"}), (S23:SKILL{name: \"Tailwind\"}), (S24:SKILL{name: \"Babel\"}),  (S25:SKILL{name: \"nodeJS\"}), (S26:SKILL{name: \"Spring Boot\"}), (S27:SKILL{name: \"Express\"}), (S28:SKILL{name: \"Kafka\"}), (S29:SKILL{name: \"Nginx\"}), (S30:SKILL{name: \"RabbitMQ\"}), (S31:SKILL{name: \".NET\"}), (S32:SKILL{name: \"Django\"}), (S33:SKILL{name: \"Electron\"}), (S34:SKILL{name: \"Rails\"}), (S35:SKILL{name: \"Laravel\"}),  (S36:SKILL{name: \"Android\"}), (S37:SKILL{name: \"Flutter\"}), (S38:SKILL{name: \"Dart\"}), (S39:SKILL{name: \"Kotlin\"}), (S40:SKILL{name: \"ReactNative\"}), (S41:SKILL{name: \"iOS\"}), (S42:SKILL{name: \"Swift\"}),  (S43:SKILL{name: \"Tensorflow\"}), (S44:SKILL{name: \"Pytorch\"}), (S45:SKILL{name: \"Pandas\"}), (S46:SKILL{name: \"Seaborn\"}), (S47:SKILL{name: \"OpenCv\"}), (S48:SKILL{name: \"Scikit Learn\"}),  (S49:SKILL{name: \"Mongo DB\"}), (S50:SKILL{name: \"My SQL\"}), (S51:SKILL{name: \"PostgreSQL\"}), (S52:SKILL{name: \"Oracle\"}), (S53:SKILL{name: \"MariaDB\"}), (S54:SKILL{name: \"CouchDB\"}),  (S55:SKILL{name: \"AWS\"}), (S56:SKILL{name: \"Docker\"}), (S57:SKILL{name: \"Jenkins\"}), (S58:SKILL{name: \"GCP\"}), (S59:SKILL{name: \"Kubernetes\"}), (S60:SKILL{name: \"Bash\"}), (S61:SKILL{name: \"CircleCI\"}), (S62:SKILL{name: \"TravisCI\"}),  (S63:SKILL{name: \"Cypress\"}), (S64:SKILL{name: \"Selenium\"}), (S65:SKILL{name: \"Karma\"}), (S66:SKILL{name: \"Junit\"}), (S67:SKILL{name: \"Jest\"}), (S68:SKILL{name: \"Mocha\"}),  (S69:SKILL{name: \"Unity\"}),  (S70:SKILL{name: \"Unreal Engine\"}),   (rasti:USER{userID: \"62752bf27407f54ce1839cb9\", username: \"rasti\"}), (zarko:USER{userID: \"62752bf27407f54ce1839cb6\", username: \"zarkoo\"}), (tara:USER{userID: \"62752bf27407f54ce1839cb7\", username: \"Jelovceva\"}), (djordje:USER{userID: \"62752bf27407f54ce1839cb8\", username: \"djole\"}), (srdjan:USER{userID: \"62752bf27407f54ce1839cb3\", username: \"srdjan\"}), (marko:USER{userID: \"62752bf27407f54ce1839cb2\", username: \"marko99\"}), (nikola:USER{userID: \"62752bf27407f54ce1839cb4\", username: \"nikola93\"}), (svetozar:USER{userID: \"62752bf27407f54ce1839cb5\", username: \"svetozar\"}),  (rasti) -[:KNOWS]-> (S5), (rasti) <-[:KNOWS]- (S5), (rasti) -[:KNOWS]-> (S11), (rasti) <-[:KNOWS]- (S11), (rasti) -[:KNOWS]-> (S16), (rasti) <-[:KNOWS]- (S16),  (djordje) -[:KNOWS]-> (S5), (djordje) <-[:KNOWS]- (S5), (djordje) -[:KNOWS]-> (S4), (djordje) <-[:KNOWS]- (S4), (djordje) -[:KNOWS]-> (S56), (djordje) <-[:KNOWS]- (S56),  (tara) -[:KNOWS]-> (S5), (tara) <-[:KNOWS]- (S5), (tara) -[:KNOWS]-> (S16), (tara) <-[:KNOWS]- (S16), (tara) -[:KNOWS]-> (S18), (tara) <-[:KNOWS]- (S18), (tara) -[:KNOWS]-> (S7), (tara) <-[:KNOWS]- (S7),  (zarko) -[:KNOWS]-> (S43), (zarko) <-[:KNOWS]- (S43), (zarko) -[:KNOWS]-> (S56), (zarko) <-[:KNOWS]- (S56), (zarko) -[:KNOWS]-> (S61), (zarko) <-[:KNOWS]- (S61),    (J1:JOB{   Id:           \"62752bf27407f54ce1839cb2\",   Position:     \"Test Engineer\",   Seniority:    \"Junior\",   Description:  \"This Software Tester is responsible for testing our mobile and web applications by executing test cases and clearly documenting the results of testing. This position works collaboratively with other testers and developers.\",   CompanyName:  \"Joberty\",   UserId:       \"62752bf27407f54ce1839cb8\" }), (J2:JOB{   Id:           \"62752bf27407f54ce1839cb3\",   Position:     \"Software Engineer\",   Seniority:    \"Senior\",   Description:  \"Analyze, design, develop and produce various Mainframe applications. Prepare technical design documents and conduct design reviews. Modify and enhance existing applications. Create transmission file setups on mainframe.\",   CompanyName:  \"Naovis\",   UserId:       \"62752bf27407f54ce1839cb8\" }), (J3:JOB{   Id:           \"62752bf27407f54ce1839cb4\",   Position:     \"Software Engineer\",   Seniority:    \"Senior\",   Description:  \"A Computer Programmer, or Systems Programmer, writes code to help software applications operate more efficiently. Their duties include designing and updating software solutions, writing and updating source-code and managing various operating systems.\",   CompanyName:  \"Synechron\",   UserId:       \"62752bf27407f54ce1839cb9\" }), (J4:JOB{   Id:           \"62752bf27407f54ce1839cb5\",   Position:     \"Software Architect\",   Seniority:    \"Senior\",   Description:  \"A Computer Programmer, or Systems Programmer, writes code to help software applications operate more efficiently. Their duties include designing and updating software solutions, writing and updating source-code and managing various operating systems.\",   CompanyName:  \"Microsoft\",   UserId:       \"62752bf27407f54ce1839cb6\" }),   (J1) -[:NEED]-> (S66), (J1) <-[:NEED]- (S66), (J1) -[:NEED]-> (S64), (J1) <-[:NEED]- (S64),  (J2) -[:NEED]-> (S5), (J2) <-[:NEED]- (S5), (J2) -[:NEED]-> (S6), (J2) <-[:NEED]- (S6), (J2) -[:NEED]-> (S17), (J2) <-[:NEED]- (S17),  (J3) -[:NEED]-> (S5), (J3) <-[:NEED]- (S5), (J3) -[:NEED]-> (S30), (J3) <-[:NEED]- (S30), (J3) -[:NEED]-> (S26), (J3) <-[:NEED]- (S26),  (J4) -[:NEED]-> (S43), (J4) <-[:NEED]- (S43), (J4) -[:NEED]-> (S44), (J4) <-[:NEED]- (S44), (J4) -[:NEED]-> (S48), (J4) <-[:NEED]- (S48), (J4) -[:NEED]-> (S47), (J4) <-[:NEED]- (S47), (J4) -[:NEED]-> (S42), (J4) <-[:NEED]- (S42) ",
		map[string]interface{}{})
	return err
}

func checkIfJobOfferExist(jobId string, transaction neo4j.Transaction) bool {
	result, _ := transaction.Run(
		"MATCH (existing_job:JOB) WHERE existing_job.Id = $jobId RETURN existing_job.Id",
		map[string]interface{}{"jobId": jobId})

	if result != nil && result.Next() && result.Record().Values[0] == jobId {
		return true
	}
	return false
}
