syntax = "proto3";

package auth;

option go_package = "./common/auth";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc PasswordlessLogin(PasswordlessLoginRequest) returns (LoginResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc ExtractDataFromToken(ExtractDataFromTokenRequest) returns (ExtractDataFromTokenResponse) {}
  rpc Verify(VerifyRequest) returns (VerifyResponse) {}
  rpc ResendVerify(ResendVerifyRequest) returns (ResendVerifyResponse) {}
  rpc Recovery(RecoveryRequest) returns (RecoveryResponse) {}
  rpc Recover(RecoveryRequestLogin) returns (LoginResponse) {}
  rpc SendEmailForPasswordlessLogin(EmailForPasswordlessLoginRequest) returns (SendEmailForPasswordLoginResponse) {}
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse){}
  rpc GenerateApiToken(ApiTokenRequest) returns(ApiTokenResponse){}
  rpc ValidateApiToken(ValidateApiTokenRequest) returns(ValidateApiTokenResponse) {}
  rpc GetApiToken(GetApiTokenRequest) returns (GetApiTokenResponse) {}
  rpc GenerateQr2TF(UserIdRequest) returns(TFAResponse){}
  rpc Verify2FactorCode(TFARequest) returns(LoginResponse){}
  rpc EditData(EditDataRequest) returns(EditDataResponse){}
}

message ChangePasswordRequest{
  string username = 1;
  string oldPassword = 2;
  string newPassword = 3;
  string confirmNewPassword = 4;
}

message ChangePasswordResponse{
  int32 status = 1;
  string msg = 2;
}

// Register

message RegisterRequest {
  string username = 1;
  string password = 2;
  string email = 3;
}

message EditDataRequest {
  string username = 1;
  string password = 2;
  string email = 3;
  bool isTwoFactor=4;
  string userId=5;
}

message  EditDataResponse{
  ErrorResponse error=1;
}

message RegisterResponse {
  int64 status = 1;
  string error = 2;
  string userID = 3;
}

message UserIdRequest{
  string userId=1;
}

// Login

message LoginRequest {
  string username = 1;
  string password = 2;
}

message PasswordlessLoginRequest {
  string tokenCode =1;
}

message EmailForPasswordlessLoginRequest {
  string email =1;
}

message VerifyRequest {
  string username = 1;
  string code = 2;
}
message VerifyResponse{
  bool verified = 1;
  string msg = 2;
}

message ResendVerifyRequest {
  string username = 1;
}
message ResendVerifyResponse{
  string msg = 2;
}


message RecoveryRequest {
  string username = 1;
}
message RecoveryResponse{
  int32 status = 1;
  string msg = 2;
}

message RecoveryRequestLogin {
  string username = 1;
  string recoveryCode = 2;
  string newPassword = 3;
  string confirmNewPassword = 4;
}

message LoginResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
  string username=4;
  string role=5;
  string userID = 6;
  bool twoFactor=7;
}

// Validate

message ValidateRequest { string token = 1; }

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  string userId = 3;
}

//Extract Data
message ExtractDataFromTokenResponse{
  string id=1;
  string username=2;
  string role=3;
  string tokenType=4;
  string apiCode=5;
}

message ExtractDataFromTokenRequest{
  string token=1;
}

message SendEmailForPasswordLoginResponse{
  string error=1;
}

//Api Token
message ApiTokenRequest{
  string userId=1;
}

message ApiToken{
  string tokenCode=1;
  string userId=2;
}

message ApiTokenResponse{
  string tokenCode=1;
  ErrorResponse error=2;
}

message ErrorResponse{
  int32 errorCode=1;
  string message=2;
}

message ValidateApiTokenRequest{
  string tokenCode=1;
}

message ValidateApiTokenResponse{
  ErrorResponse error=1;
}

message GetApiTokenRequest{
  string tokenCode=1;
}

message GetApiTokenResponse{
  ApiToken token=1;
}

message TFAResponse{
  bytes qrCode=1;
  ErrorResponse error=2;
}

message TFARequest{
  string userId=1;
  string code=2;
}